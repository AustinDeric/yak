<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 
  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>

    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
        <param name="resolution" value="0.005" />

        <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
        <param name="frame_id" type="string" value="world_frame" />

        <!-- maximum range to integrate (speedup!) -->
        <param name="sensor_model/max_range" value="1.0" />

        <!-- data source to integrate (PointCloud2) -->
        <!--<remap from="cloud_in" to="/narrow_stereo/points_filtered2" />-->
        <remap from="cloud_in" to="/camera/depth/points"/>
    </node>

    <node pkg="nbv_planner" type="nbv_planner_node" name="nbv_planner_node" output="screen">
        <param name="volume_dim_x" type="double" value="0.5" />
        <param name="volume_dim_y" type="double" value="0.5" />
        <param name="volume_dim_z" type="double" value="0.3" />
        <param name="num_pose_slices" value="8" />
        <param name="ray_count" value="16" />
        <param name="raycast_distance" type="double" value="0.5" />
    </node>

    <node pkg="nbv_planner" type="octomap_reset_node" name="octomap_reset_node" output="screen"/>
</launch>
